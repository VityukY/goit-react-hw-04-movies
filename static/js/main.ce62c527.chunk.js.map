{"version":3,"sources":["components/filmCard.js","pages/HomePage.js","pages/MoviesPage.js","components/Cast.js","components/ReviewsFilm.js","pages/MovieDetailsPage.js","App.js","index.js"],"names":["FilmCard","id","title","backdrop_path","overview","imgURL","className","src","alt","HomeView","state","movies","page","fetchTrends","axios","get","then","response","data","results","setState","prevState","this","length","map","movie","to","type","onClick","Component","MovieView","query","changeHandler","e","currentTarget","value","submitHandler","a","preventDefault","fetchMovies","onSubmit","onChange","props","match","url","Cast","actors","cast","actor","name","width","profile_path","ReviewsFilm","reviews","review","author","content","MovieDetailsPage","movieId","params","poster_path","filmReviews","castRevies","filmReviewsOpen","featchMovieDetaild","castReviewsToogle","revwsReviewsToogle","castRequest","reviewsRequest","path","render","App","exact","activeClassName","component","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ce62c527.chunk.js","sourcesContent":["const FilmCard = ({ id, title, backdrop_path, overview }) => {\r\n   const imgURL = `https://image.tmdb.org/t/p/w500${backdrop_path}`;\r\n\r\n   return (\r\n      <li key={id} className=\"filmCard\">\r\n         <h1 className=\"filmCard_title\"> {title}</h1>\r\n         <img src={imgURL} alt={title} className=\" cardFilm_images\" />\r\n         <p className=\"description\">Description: {overview}</p>\r\n      </li>\r\n   );\r\n};\r\nexport default FilmCard;\r\n","import axios from 'axios';\r\nimport { Component } from 'react';\r\nimport FilmCard from '../components/filmCard';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass HomeView extends Component {\r\n   state = {\r\n      movies: [],\r\n      page: 1,\r\n   };\r\n   componentDidMount() {\r\n      this.fetchTrends();\r\n   }\r\n   fetchTrends = () => {\r\n      axios\r\n         .get(\r\n            `https://api.themoviedb.org/3/trending/movie/week?api_key=0e0748a6c8b324a098ac6737209de7e8&page=${this.state.page}`,\r\n         )\r\n         .then(response => {\r\n            return response.data.results;\r\n         })\r\n         .then(data =>\r\n            this.setState(prevState => ({\r\n               page: prevState.page + 1,\r\n               movies: [...prevState.movies, ...data],\r\n            })),\r\n         );\r\n   };\r\n\r\n   render() {\r\n      const { movies } = this.state;\r\n      return (\r\n         <>\r\n            <h1> HomePage</h1>\r\n            {movies.length > 0 && (\r\n               <>\r\n                  <ul className=\"filmList\">\r\n                     {movies.map(movie => (\r\n                        <Link to={`/movies/${movie.id}`} className=\"link\">\r\n                           <FilmCard\r\n                              id={movie.id}\r\n                              title={movie.title}\r\n                              backdrop_path={movie.backdrop_path}\r\n                              overview={movie.overview}\r\n                           />\r\n                        </Link>\r\n                     ))}\r\n                  </ul>\r\n                  <div className=\"btnContaine\">\r\n                     <button type=\"button\" onClick={this.fetchTrends}>\r\n                        Загрузить еще\r\n                     </button>\r\n                  </div>\r\n               </>\r\n            )}\r\n         </>\r\n      );\r\n   }\r\n}\r\n\r\nexport default HomeView;\r\n","import { Component } from 'react';\r\nimport axios from 'axios';\r\nimport FilmCard from '../components/filmCard';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass MovieView extends Component {\r\n   state = {\r\n      query: '',\r\n      page: 1,\r\n      movies: [],\r\n   };\r\n   changeHandler = e => {\r\n      this.setState({ query: e.currentTarget.value });\r\n   };\r\n\r\n   submitHandler = async e => {\r\n      e.preventDefault();\r\n      await this.setState({ movies: [], page: 1 });\r\n      this.fetchMovies(this.state.page);\r\n   };\r\n   fetchMovies = () => {\r\n      axios\r\n         .get(\r\n            `https://api.themoviedb.org/3/search/movie?api_key=0e0748a6c8b324a098ac6737209de7e8&language=en-US&query=${this.state.query}&page=${this.state.page}&include_adult=false`,\r\n         )\r\n         .then(response => {\r\n            return response.data.results;\r\n         })\r\n         .then(data =>\r\n            this.setState(prevState => ({\r\n               movies: [...prevState.movies, ...data],\r\n               page: prevState.page + 1,\r\n            })),\r\n         );\r\n   };\r\n   render() {\r\n      return (\r\n         <>\r\n            <h1> компонент поиска фильмов</h1>\r\n            <form onSubmit={this.submitHandler}>\r\n               <input value={this.state.query} onChange={this.changeHandler} />\r\n               <button type=\"submit\"> Искать фильм </button>\r\n            </form>\r\n            {this.state.movies.length > 0 && (\r\n               <>\r\n                  <ul className=\"filmList\">\r\n                     {this.state.movies.map(movie => (\r\n                        <Link\r\n                           to={`${this.props.match.url}/${movie.id}`}\r\n                           className=\"link\"\r\n                        >\r\n                           <FilmCard\r\n                              id={movie.id}\r\n                              title={movie.title}\r\n                              backdrop_path={movie.backdrop_path}\r\n                              overview={movie.overview}\r\n                           />\r\n                        </Link>\r\n                     ))}\r\n                  </ul>\r\n                  <div className=\"btnContaine\">\r\n                     <button type=\"button\" onClick={this.fetchMovies}>\r\n                        Загрузить еще\r\n                     </button>\r\n                  </div>\r\n               </>\r\n            )}\r\n         </>\r\n      );\r\n   }\r\n}\r\n\r\nexport default MovieView;\r\n\r\n/*'/movies' - компонент <MoviesPage>, страница поиска фильмов по ключевому слову.*/\r\n\r\n/*https://api.themoviedb.org/3/search/movie?api_key=0e0748a6c8b324a098ac6737209de7e8&language=en-US&query=Batman&page=1&include_adult=false*/\r\n","import { Component } from 'react';\r\n\r\nclass Cast extends Component {\r\n   state = {\r\n      actors: this.props.cast,\r\n   };\r\n   /*   componentDidMount() {\r\n         console.log(this.props.cast);\r\n      }\r\n      componentDidUpdate() {\r\n         console.log(this.props.cast);\r\n      }*/\r\n   render() {\r\n      return (\r\n         <>\r\n            <h1>Cast </h1>\r\n            {this.state.actors && (\r\n               <ul className=\"castList\">\r\n                  {this.state.actors.map(actor => (\r\n                     <div>\r\n                        <h3>{actor.name}</h3>\r\n                        <img\r\n                           width=\"250\"\r\n                           src={`https://image.tmdb.org/t/p/w500${actor.profile_path}`}\r\n                           alt={actor.name}\r\n                        />\r\n                     </div>\r\n                  ))}\r\n               </ul>\r\n            )}\r\n         </>\r\n      );\r\n   }\r\n}\r\n\r\nexport default Cast;\r\n","import { Component } from 'react';\r\n\r\nclass ReviewsFilm extends Component {\r\n   state = {\r\n      reviews: this.props.reviews,\r\n   };\r\n\r\n   render() {\r\n      return (\r\n         <>\r\n            <h1>reviews </h1>\r\n            {this.state.reviews && (\r\n               <ul className=\"castList\">\r\n                  {this.state.reviews.map(review => (\r\n                     <div>\r\n                        <h3>{review.author}</h3>\r\n                        <p> {review.content}</p>\r\n                     </div>\r\n                  ))}\r\n               </ul>\r\n            )}\r\n         </>\r\n      );\r\n   }\r\n}\r\n\r\nexport default ReviewsFilm;\r\n","import axios from 'axios';\r\nimport { Component } from 'react';\r\nimport { Route, NavLink } from 'react-router-dom';\r\nimport Cast from '../components/Cast';\r\nimport ReviewsFilm from '../components/ReviewsFilm';\r\n\r\nclass MovieDetailsPage extends Component {\r\n   state = {\r\n      movieId: this.props.match.params.movieId,\r\n      title: null,\r\n      poster_path: null,\r\n      overview: null,\r\n      cast: null,\r\n      reviews: null,\r\n      filmReviews: null,\r\n      castRevies: false,\r\n      filmReviewsOpen: false,\r\n   };\r\n   componentDidMount() {\r\n      this.featchMovieDetaild();\r\n      this.castRequest();\r\n      this.reviewsRequest();\r\n   }\r\n   featchMovieDetaild = () => {\r\n      axios\r\n         .get(\r\n            `https://api.themoviedb.org/3/movie/${this.state.movieId}?api_key=0e0748a6c8b324a098ac6737209de7e8&language=en-US`,\r\n         )\r\n         .then(response => this.setState({ ...response.data }));\r\n   };\r\n\r\n   castReviewsToogle = () => {\r\n      this.setState(prevState => ({\r\n         castRevies: !prevState.castRevies,\r\n         filmReviewsOpen: false,\r\n      }));\r\n   };\r\n   revwsReviewsToogle = () => {\r\n      this.setState(prevState => ({\r\n         filmReviewsOpen: !prevState.filmReviewsOpen,\r\n         castRevies: false,\r\n      }));\r\n   };\r\n\r\n   castRequest = () => {\r\n      axios\r\n         .get(\r\n            `https://api.themoviedb.org/3/movie/${this.state.movieId}/credits?api_key=0e0748a6c8b324a098ac6737209de7e8&language=en-US`,\r\n         )\r\n         .then(response => this.setState({ cast: response.data.cast }));\r\n   };\r\n   reviewsRequest = () => {\r\n      axios\r\n         .get(\r\n            `https://api.themoviedb.org/3/movie/${this.state.movieId}/reviews?api_key=0e0748a6c8b324a098ac6737209de7e8&language=en-US&language=en-US&page=1`,\r\n         )\r\n         .then(response =>\r\n            this.setState({ filmReviews: response.data.results }),\r\n         );\r\n   };\r\n\r\n   render() {\r\n      const { title, overview, poster_path } = this.state;\r\n      return (\r\n         <>\r\n            {this.state.title && (\r\n               <>\r\n                  <h1>{title}</h1>\r\n                  <p>{overview}</p>\r\n                  <img\r\n                     src={`https://image.tmdb.org/t/p/w500${poster_path}`}\r\n                     alt={title}\r\n                  />\r\n\r\n                  <NavLink to={`/movies/${this.state.movieId}/cast`}>\r\n                     <button type=\"button\" onClick={this.castReviewsToogle}>\r\n                        {this.state.castRevies ? 'Close Cast' : 'Open Cast'}\r\n                     </button>\r\n                  </NavLink>\r\n                  <NavLink to={`/movies/${this.state.movieId}/reviews`}>\r\n                     <button type=\"button\" onClick={this.revwsReviewsToogle}>\r\n                        {this.state.filmReviewsOpen\r\n                           ? 'Close Reviews'\r\n                           : 'Open Reviews'}\r\n                     </button>\r\n                  </NavLink>\r\n\r\n                  {this.state.castRevies && (\r\n                     <Route\r\n                        path=\"/movies/:movieId/cast\"\r\n                        render={props => {\r\n                           return <Cast {...props} cast={this.state.cast} />;\r\n                        }}\r\n                     />\r\n                  )}\r\n\r\n                  {this.state.filmReviewsOpen && (\r\n                     <Route\r\n                        path=\"/movies/:movieId/reviews\"\r\n                        render={props => {\r\n                           return (\r\n                              <ReviewsFilm\r\n                                 {...props}\r\n                                 reviews={this.state.filmReviews}\r\n                              />\r\n                           );\r\n                        }}\r\n                     />\r\n                  )}\r\n               </>\r\n            )}\r\n         </>\r\n      );\r\n   }\r\n}\r\n\r\nexport default MovieDetailsPage;\r\n","import { Route, NavLink, Switch } from 'react-router-dom';\nimport { Component } from 'react';\nimport HomeView from './pages/HomePage';\nimport MovieView from './pages/MoviesPage';\nimport MovieDetailsPage from './pages/MovieDetailsPage';\n/*import axios from 'axios';*/\nimport './styles.css';\n\nclass App extends Component {\n   state = {};\n   componentDidMount() {\n      /* this.fetchMovie();*/\n   }\n   /*\n   fetchMovie = () => {\n      axios\n         .get(\n            'https://api.themoviedb.org/3/movie/550?api_key=0e0748a6c8b324a098ac6737209de7e8',\n         )\n         .then(response => {\n            return response.data;\n         })\n         .then(data =>\n            this.setState({\n               id: data.id,\n               title: data.title,\n               overview: data.overview,\n               backdrop_path: data.backdrop_path,\n            }),\n         );\n   };\n*/\n   render() {\n      return (\n         <div className=\"App\">\n            <ul>\n               <li>\n                  <NavLink exact to=\"/\" className=\"\" activeClassName=\"\">\n                     Home Page\n                  </NavLink>\n               </li>\n               <li>\n                  <NavLink to=\"/movies\" className=\"\" activeClassName=\"\">\n                     Movies Page\n                  </NavLink>\n               </li>\n            </ul>\n            <Switch>\n               <Route exact path=\"/\" component={HomeView} />\n               <Route path=\"/movies/:movieId\" component={MovieDetailsPage} />\n               <Route path=\"/movies\" component={MovieView} />\n            </Switch>\n         </div>\n      );\n   }\n}\n\nexport default App;\n\n/*\n'/' - компонент <HomePage>, домашняя страница со списком популярных кинофильмов.\n'/movies' - компонент <MoviesPage>, страница поиска фильмов по ключевому слову.\n'/movies/:movieId' - компонент <MovieDetailsPage>, страница с детальной информацией о кинофильме.\n/movies/:movieId/cast - компонент <Cast>, информация о актерском составе. Рендерится на странице <MovieDetailsPage>.\n/movies/:movieId/reviews - компонент <Reviews>, информация об обзорах. Рендерится на странице <MovieDetailsPage>.\n*/\n/*title: \"Fight Club\"\n\noverview: discr\nbackdrop_path: \"/rr7E0NoGKxvbkb89eR1GwfoYjpA.jpg\"\n*/\n/*      const { title, overview, backdrop_path } = this.state;\n      const imgURL = `https://image.tmdb.org/t/p/w500${backdrop_path}`;*/\n\n/*            {title && (\n               <>\n                  <p>Name: {title}</p>\n                  <img src={imgURL} alt={title} />\n                  <p>Description: {overview}</p>\n               </>\n            )}*/\n\n/*state = {\n                  id: null,\n      title: null,\n      overview: null,\n      backdrop_path: null,\n            }*/\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n   <React.StrictMode>\n      <BrowserRouter>\n         <App />\n      </BrowserRouter>\n   </React.StrictMode>,\n   document.getElementById('root'),\n);\n"],"sourceRoot":""}